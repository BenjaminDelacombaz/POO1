<!doctype html>
<html lang="fr">

  <head>
    <meta charset="utf-8">

    <title><%= @options['title'] %></title>

    <meta name="author" content="Pascal Hurni">

    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />

    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">

    <link rel="stylesheet" href="revealjs/css/reveal.min.css">
    <link rel="stylesheet" href="revealjs/css/theme/phi-dark.css" id="theme">

    <!-- For syntax highlighting -->
    <link rel="stylesheet" href="revealjs/lib/css/phi-style-light.css">
    <link rel="stylesheet" href="revealjs/lib/css/phi-style-custom.css">

    <!-- If the query includes 'print-pdf', use the PDF print sheet -->
    <script>
      document.write( '<link rel="stylesheet" href="revealjs/css/print/' + ( window.location.search.match( /print-pdf/gi ) ? 'pdf' : 'paper' ) + '.css" type="text/css" media="print">' );
    </script>

    <!--[if lt IE 9]>
    <script src="revealjs/lib/js/html5shiv.js"></script>
    <![endif]-->
  </head>

  <body>

    <div class="reveal">

      <!-- Any section element inside of this container is displayed as a slide -->
      <div class="slides">
        <section class="main-title" data-markdown>
          <script type="text/template">
            # <%= @options['title'] %>
            
            <% if abstract = @options['abstract'] %>
              <%= abstract %>
              <!-- .element: class="abstract" -->
            <% end %>

            <% if author = Array(@options['author']).join(', ') %>
              <%= author %>
              <!-- .element: class="author" -->
            <% end %>

            <% if date = Array(@options['date']).join(', ') %>
              <%= date %>
              <!-- .element: class="date" -->
            <% end %>
          </script>
        </section>          

        <% @sections.each do |section| %>
          <section data-markdown="<%= section %>" data-separator="^\n---\n$" data-vertical="\n&#160\n$" data-notes="^&#160 \S"></section>
        <% end %>
      </div>

    </div>

    <script src="revealjs/lib/js/head.min.js"></script>
    <script src="revealjs/js/reveal.min.js"></script>

    <script>

      // Full list of configuration options available here:
      // https://github.com/hakimel/reveal.js#configuration
      Reveal.initialize({
        controls: true,
        progress: true,
        history: true,
        center: true,

        width: <%= @options['width'] || 1000 %>,
        height: <%= @options['height'] || 700 %>,
        margin:  <%= @options['margin'] || 0.1 %>,

        theme: Reveal.getQueryHash().theme, // available themes are in /css/theme
        transition: Reveal.getQueryHash().transition || 'default', // default/cube/page/concave/zoom/linear/fade/none

        // Parallax scrolling
        // parallaxBackgroundImage: 'https://s3.amazonaws.com/hakim-static/reveal-js/reveal-parallax-1.jpg',
        // parallaxBackgroundSize: '2100px 900px',

        // Optional libraries used to extend on reveal.js
        dependencies: [
          { src: 'revealjs/lib/js/classList.js', condition: function() { return !document.body.classList; } },
          { src: 'revealjs/plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
          { src: 'revealjs/plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
          { src: 'revealjs/plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
          { src: 'revealjs/plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } },
          { src: 'revealjs/plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }
        ]
      });

    </script>

  </body>
</html>
